version: "3.7"
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile-local
    ports:
      - "8070:8080"
    depends_on:
      - redpanda1
      - redpanda2
      - redpanda3
      - postgres
    networks:
      subscription-network:
#        ipv4_address: '170.24.1.8'
      redpanda_network:
        ipv4_address: '172.24.1.6'
    env_file:
      - ./environment/local/.env
    restart: on-failure
    volumes:
      - .:/app
  web-debug:
    build:
      context: .
      dockerfile: Dockerfile-debug
    cap_add:
      - SYS_PTRACE
    ports:
      - "8080:8080"
      - "40000:40000"
    security_opt:
      - "seccomp:unconfined"
    command: /dlv --headless --listen=:40000 --api-version=2 exec /subscriptions
    env_file:
      - environment/local/.env
    restart: on-failure
    depends_on:
      - postgres
    networks:
      - subscription-network

  postgres:
    image: postgres:14.1-alpine
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 5s
      retries: 20
    ports:
      - '1234:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./environment/local/database/init-new.sql:/docker-entrypoint-initdb.d/create_tables.sql
    env_file:
      - environment/local/.env
    networks:
      subscription-network:
#        ipv4_address: '170.24.1.3'
  redpanda1:
    command:
      - redpanda
      - start
      - --node-id
      - '0'
      - --kafka-addr
      - 'internal://0.0.0.0:9092,external://172.24.1.2:19092'
      - --advertise-kafka-addr
      - 'internal://172.24.1.2:9092,external://127.0.0.1:19092'
      - --pandaproxy-addr
      - 'internal://0.0.0.0:8082,external://172.24.1.2:18082'
      - --advertise-pandaproxy-addr
      - 'internal://172.24.1.2:8082,external://127.0.0.1:18082'
      - --schema-registry-addr
      - '172.24.1.2:8081'
      - --rpc-addr
      - '172.24.1.2:33145'
      - --advertise-rpc-addr
      - '172.24.1.2:33145'
      - --smp
      - '1'
      - --memory
      - '1G'
      - --reserve-memory
      - '0M'
      - --overprovisioned
      - --check=false
    image: 'docker.vectorized.io/vectorized/redpanda:latest'
    container_name: 'redpanda1'
    networks:
      redpanda_network:
        ipv4_address: '172.24.1.2'
    volumes:
      - redpanda1:/var/lib/redpanda/data
    ports:
      - 18081:8081  # Schema registry port
      - 18082:18082 # Pandaproxy port
      - 19092:19092 # Kafka API port
      - 19644:9644  # Prometheus and HTTP admin port
  redpanda2:
    command:
      - redpanda
      - start
      - --node-id
      - '1'
      - --kafka-addr
      - 'internal://0.0.0.0:9092,external://172.24.1.3:29092'
      - --advertise-kafka-addr
      - 'internal://172.24.1.3:9092,external://127.0.0.1:29092'
      - --pandaproxy-addr
      - 'internal://0.0.0.0:8082,external://172.24.1.3:28082'
      - --advertise-pandaproxy-addr
      - 'internal://172.24.1.3:8082,external://127.0.0.1:28082'
      - --schema-registry-addr
      - '172.24.1.3:8081'
      - --rpc-addr
      - '172.24.1.3:33145'
      - --advertise-rpc-addr
      - '172.24.1.3:33145'
      - --smp
      - '1'
      - --memory
      - '1G'
      - --reserve-memory
      - '0M'
      - --overprovisioned
      - --check=false
      - --seeds
      - 'redpanda1:33145'
    image: 'docker.vectorized.io/vectorized/redpanda:latest'
    container_name: redpanda2
    networks:
      redpanda_network:
        ipv4_address: '172.24.1.3'
    volumes:
      - redpanda2:/var/lib/redpanda/data
    ports:
      - 28081:8081  # Schema registry port
      - 28082:28082 # Pandaproxy port
      - 29092:29092 # Kafka API port
      - 29644:9644  # Prometheus and HTTP admin port
    depends_on:
      - 'redpanda1'
  redpanda3:
    command:
      - redpanda
      - start
      - --node-id
      - '2'
      - --kafka-addr
      - 'internal://0.0.0.0:9092,external://172.24.1.4:39092'
      - --advertise-kafka-addr
      - 'internal://172.24.1.4:9092,external://127.0.0.1:39092'
      - --pandaproxy-addr
      - 'internal://0.0.0.0:8082,external://172.24.1.4:38082'
      - --advertise-pandaproxy-addr
      - 'internal://172.24.1.4:8082,external://127.0.0.1:38082'
      - --schema-registry-addr
      - '172.24.1.4:8081'
      - --rpc-addr
      - '172.24.1.4:33145'
      - --advertise-rpc-addr
      - '172.24.1.4:33145'
      - --smp
      - '1'
      - --memory
      - '1G'
      - --reserve-memory
      - '0M'
      - --overprovisioned
      - --check=false
      - --seeds
      - 'redpanda1:33145'
    image: 'docker.vectorized.io/vectorized/redpanda:latest'
    container_name: redpanda3
    networks:
      redpanda_network:
        ipv4_address: '172.24.1.4'
    ports:
      - 38081:8081  # Schema registry port
      - 38082:38082 # Pandaproxy port
      - 39092:39092 # Kafka API port
      - 39644:9644  # Prometheus and HTTP admin port
    volumes:
      - redpanda3:/var/lib/redpanda/data
    depends_on:
      - 'redpanda1'
volumes:
  postgres-data:
  redpanda1:
    external: true
  redpanda2:
    external: true
  redpanda3:
    external: true
networks:
  redpanda_network:
    driver: bridge
    ipam:
      config:
        - subnet: '172.24.1.0/24'
          gateway: '172.24.1.1'
  subscription-network:
    driver: bridge
#    ipam:
#      config:
#        - subnet: '170.24.1.0/24'
#          gateway: '170.24.1.1'
