openapi: 3.0.0
info:
  version: 1.0.0
  title: Subscriptions Service
  description: A service that deals with access to the KL platform
paths:
  /healthcheck:
    get:
      description: Returns whether the application is healthy (connected to dependencies)
      responses:
        "200":
          $ref: "#/components/responses/ApplicationStateResponse"
  /liveness:
    get:
      description: Returns whether the application is running
      responses:
        "200":
          $ref: "#/components/responses/ApplicationStateResponse"
  /subscriptions/{subscription_id}/usage-reports:
    parameters:
      - name: subscription_id
        schema:
          type: string
        in: path
    get:
      description: Returns a list of usage reports for a given subscription
      responses:
        "200":
          description: Array of Usage Report dates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsageReports"
        "404":
          description: "Subscription does not exist"
  /subscriptions/{subscription_id}/usage-reports/{usage_report_id}:
    parameters:
      - name: subscription_id
        schema:
          type: string
        in: path
      - name: usage_report_id
        schema:
          type: string
        in: path
    get:
      description: Returns a usage reports for a given subscription and usage report id
      x-auth-jwt: true
      responses:
        "200":
          description: Usage Report data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsageReport"
        "404":
          description: "Subscription does not exist"
        "403":
          description: "The API key provided is not allowed to call this endpoint"
  /subscription-types:
    get:
      description: Get the available types of Subscription
      responses:
        "200":
          description: Array of Subscription Types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SubscriptionType"
  /subscription-actions:
    get:
      description: Get the available Subscription actions
      responses:
        "200":
          description: Array of Subscription Actions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SubscriptionAction"
  /subscriptions:
    post:
      description: Create a Subscription
      x-auth-api-key: create-subscription
      requestBody:
        $ref: "#/components/requestBodies/CreateSubscriptionRequest"
      responses:
        "201":
          description: "Successfully created a Subscription"
          headers:
            Location:
              schema:
                type: string
                format: uri
                description: "Location of the created resource"
        "409":
          description: "Could not create Subscription because one already exists for the Account"
        "401":
          description: "The API key provided is not recognised"
        "403":
          description: "The API key provided is not allowed to call this endpoint"
    get:
      description: Search for a Subscription
      x-auth-api-key: get-subscription
      x-auth-jwt: true
      parameters:
        - name: account_id
          schema:
            type: string
          in: query
          required: true
      responses:
        "200":
          description: "Results from search for Subscription"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscription"
        "401":
          description: "The API key provided is not recognised"
        "403":
          description: "The API key provided is not allowed to call this endpoint"
  /subscriptions/{subscription_id}:
    get:
      description: Get a Subscription by ID
      x-auth-api-key: get-subscription
      x-auth-jwt: true
      parameters:
        - name: subscription_id
          schema:
            type: string
          in: path
      responses:
        "200":
          description: "Successfully retrieved the Subscription"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        "404":
          description: "Subscription does not exist"
        "401":
          description: "The API key provided is not recognised"
        "403":
          description: "The API key provided is not allowed to call this endpoint"
    patch:
      description: Patch a subscription state. Set to Active/Disabled
      x-auth-jwt: true
      parameters:
        - name: subscription_id
          schema:
            type: string
          in: path
      requestBody:
        $ref: "#/components/requestBodies/PatchSubscriptionRequest"
      responses:
        "200":
          description: "OK response"
        "404":
          description: "Subscription does not exist"
        "403":
          description: "subscription does not belong to the account making the request."
components:
  schemas:
    SubscriptionAction:
      required:
        - name
        - description
        - unit
      properties:
        name:
          type: string
        description:
          type: string
        unit:
          type: string
    SubscriptionType:
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    Subscription:
      required:
        - id
        - account_id
        - state
      properties:
        id:
          type: string
          format: uuid
        account_id:
          type: string
          format: uuid
        state:
          type: string
    UsageReports:
      required:
        - id
        - from
        - to
      properties:
        id:
          type: string
          format: uuid
        from:
          type: string
        to:
          type: string
    UsageReport:
      required:
        - id
        - from
        - to
        - report_completed_at
        - state
        - products
      properties:
        id:
          type: string
          format: uuid
        from:
          type: string
        to:
          type: string
        report_completed_at:
          type: string
        state:
          type: string
        products:
          $ref: "#/components/schemas/Product"
    Product:
      required:
        - product_name
      properties:
        product_name:
          type: string
  responses:
    ApplicationStateResponse:
      description: Successful healthcheck or liveness response
      content:
        application/json:
          schema:
            type: object
            required:
              - up
              - details
            properties:
              up:
                type: boolean
              details:
                type: string
    UsageReportsResponse:
      description: Response of usage reports for given subscription
      content:
        application/json:
          schema:
            type: object
            required:
              - reports
            properties:
              reports:
                type: array
  requestBodies:
    CreateSubscriptionRequest:
      description: Request to create a new Subscription
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - account_id
              - state
            properties:
              account_id:
                type: string
                format: uuid
    PatchSubscriptionRequest:
      description: Request to patch a Subscription
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - state
            properties:
              state:
                type: string
